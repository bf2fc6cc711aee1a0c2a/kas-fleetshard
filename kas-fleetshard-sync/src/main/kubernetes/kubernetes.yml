apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kas-fleetshard-sync
  labels:
    app: kas-fleetshard-sync
rules:
  - apiGroups:
      - managedkafka.bf2.org
    resources:
      - managedkafkas
      - managedkafkas/status
      - managedkafkaagents
      - managedkafkaagents/status
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - create
      - delete
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kas-fleetshard-sync
  labels:
    app: kas-fleetshard-sync
subjects:
  - kind: ServiceAccount
    name: kas-fleetshard-sync
    namespace: kas-fleetshard
roleRef:
  kind: ClusterRole
  name: kas-fleetshard-sync
  apiGroup: rbac.authorization.k8s.io
---
# secret permission is generated by quarkus-kubernetes-config in the main deployment file
# https://github.com/quarkusio/quarkus/issues/15279 addresses that the permissions are too broad
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kas-fleetshard-sync
  labels:
    app: kas-fleetshard-sync
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - create
      - delete
      - patch
      - update
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kas-fleetshard-sync
subjects:
- kind: ServiceAccount
  name: kas-fleetshard-sync  
roleRef:
  kind: Role
  name: kas-fleetshard-sync
  apiGroup: rbac.authorization.k8s.io