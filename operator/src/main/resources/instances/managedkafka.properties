#
# Default properties shared by all instances
#

zookeeper.volume-size=10Gi

# default values for spec capacity - should be removed or replaced with a hard capacity
kafka.max-connections=3000
kafka.message-max-bytes=1048588
kafka.connection-attempts-per-sec=100
kafka.quota-callback-usage-metrics-topic=__redhat_strimzi_volumeUsageMetrics
kafka.quota-callback-quota-kafka-clientid-prefix=__redhat_strimzi

kafka.quota-callback-quota-policy-check-interval=15

# topology settings
kafka.colocate-with-zookeeper=true
adminserver.colocate-with-zookeeper=true
kafkaexporter.colocate-with-zookeeper=true
canary.colocate-with-zookeeper=true

canary.container-cpu=75m
canary.container-memory=64Mi

# Storage settings for quota plugin
storage.check-interval=30
storage.safety-factor=2
storage.min-margin=10Gi
# Based on experimentation with ext4 volumes (the kubernetes default which is used by the service).
storage.formatting-overhead=0.05

# Override for partition limit enforcement. This override should be removed once we can enable this by default
kafka.partition-limit-enforced=false

cruisecontrol.metric-reporter-topic=__redhat_strimzi.cruisecontrol.metrics
cruisecontrol.metric-reporter-topic-min-insync-replicas=2

cruisecontrol.partition-metric-sample-store-topic=__redhat_strimzi.cruisecontrol.partitionmetricsamples
cruisecontrol.broker-metric-sample-store-topic=__redhat_strimzi.cruisecontrol.modeltrainingsamples
cruisecontrol.metric-sample-store-topic-replication-factor=3

cruisecontrol.hard-goals=com.linkedin.kafka.cruisecontrol.analyzer.goals.RackAwareGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.DiskUsageDistributionGoal
cruisecontrol.default-goals=com.linkedin.kafka.cruisecontrol.analyzer.goals.RackAwareGoal,com.linkedin.kafka.cruisecontrol.analyzer.goals.DiskUsageDistributionGoal
# Minimum number of brokers to be eligible for cruise-control.  Configurations with fewer brokers wont have cruisecontrol deployed.
cruisecontrol.min-brokers=6
