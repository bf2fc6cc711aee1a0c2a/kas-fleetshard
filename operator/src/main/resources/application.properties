agent.status.interval=60s
strimzi.bundle.interval=60s

quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] (%t) %x %s%e%n

image.admin-api=quay.io/mk-ci-cd/kafka-admin-api:0.4.0
image.canary=quay.io/mk-ci-cd/strimzi-canary:0.0.7

# unique label required to identify the DrainCleaner's validating webhook
drain.cleaner.webhook.label.key=olm.webhook-description-generate-name
drain.cleaner.webhook.label.value=strimzi-drain-cleaner.kb.io

%dev.quarkus.log.console.level=DEBUG
%dev.quarkus.log.category."org.bf2".level=DEBUG

%test.quarkus.log.category."org.bf2".level=DEBUG

mock.factory.interval=15s

# external configuration injection through configmap
quarkus.kubernetes-config.enabled=true
quarkus.kubernetes-config.fail-on-missing-config=false
quarkus.kubernetes-config.config-maps=kas-fleetshard-config

# The final version to which `acl-legacy` configurations apply
managedkafka.kafka.acl-legacy.final-version=0.23.0-1
# Static ACL static configuration for GlobalAuthorizer (deprecated)
managedkafka.kafka.acl-legacy.authorizer-class=io.bf2.kafka.authorizer.GlobalAclAuthorizer
managedkafka.kafka.acl-legacy.config-prefix=strimzi.authorization.global-authorizer.
managedkafka.kafka.acl-legacy.allowed-listeners=TLS-9093,SRE-9096
# Allow all topic, group, and transactional ID operations (deprecated)
managedkafka.kafka.acl-legacy.global=\
permission=allow;topic=*;operations=all \n\
permission=allow;group=*;operations=all \n\
permission=allow;transactional_id=*;operations=all

# Static ACL static configuration for CustomAuthorizer
managedkafka.kafka.acl.authorizer-class=io.bf2.kafka.authorizer.CustomAclAuthorizer
managedkafka.kafka.acl.config-prefix=strimzi.authorization.custom-authorizer.
managedkafka.kafka.acl.allowed-listeners=SRE-9096
# Deny all cluster operations from `external` listener and allow group, topic, and transactional ID ops as default (when no custom ACLs are set)
managedkafka.kafka.acl.global=\
permission=deny;listeners=EXTERNAL.*;cluster=*;operations=all \n\
default=true;permission=allow;topic=*;operations=all \n\
default=true;permission=allow;group=*;operations=all \n\
default=true;permission=allow;transactional_id=*;operations=all
# Allow "owner" users full control of topics, groups, transactional_ids, and cluster ACLs
managedkafka.kafka.acl.owner=\
permission=allow;principal=%1$s;cluster=*;operations=describe \n\
permission=allow;principal=%1$s;cluster=*;operations=alter;apis=create_acls,delete_acls \n\
permission=allow;principal=%1$s;topic=*;operations=all \n\
permission=allow;principal=%1$s;group=*;operations=all \n\
permission=allow;principal=%1$s;transactional_id=*;operations=all
# "canary" service account allowed to read/write own topic, read own consumer group
managedkafka.kafka.acl.service-accounts.canary=\
permission=allow;principal=service-account-%1$s;cluster=*;operations=alter;apis=alter_partition_reassignments \n\
permission=allow;principal=service-account-%1$s;topic=__strimzi_canary;operations=create,describe,read,write,alter \n\
permission=allow;principal=service-account-%1$s;group=strimzi-canary-group;operations=describe,read
# Used for validation in Admin API and custom Kafka Authorizer
managedkafka.kafka.acl.resource-operations={ "cluster": [ "describe", "alter" ], "group": [ "all", "delete", "describe", "read" ], "topic": [ "all", "alter", "alter_configs", "create", "delete", "describe", "describe_configs", "read", "write" ], "transactional_id": [ "all", "describe", "write" ] }
