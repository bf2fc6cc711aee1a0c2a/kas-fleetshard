---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  labels:
    app.kubernetes.io/managed-by: "kas-fleetshard-operator"
    app: "test-mk-canary"
    app.kubernetes.io/component: "canary"
    bf2.org/kafkaInstanceProfileType: "standard"
  name: "test-mk-canary"
  namespace: "test"
  ownerReferences:
    - apiVersion: "managedkafka.bf2.org/v1alpha1"
      kind: "ManagedKafka"
      name: "test-mk"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/managed-by: "kas-fleetshard-operator"
      app: "test-mk-canary"
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: "kas-fleetshard-operator"
        app: "test-mk-canary"
        app.kubernetes.io/component: "canary"
        bf2.org/kafkaInstanceProfileType: "standard"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "bf2.org/kafkaInstanceProfileType"
                    operator: "In"
                    values:
                      - "standard"
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "strimzi.io/name"
                      operator: "In"
                      values:
                        - "test-mk-zookeeper"
                topologyKey: "kubernetes.io/hostname"
              weight: 100
      initContainers:
        - name: init
          image: "quay.io/mk-ci-cd/strimzi-canary:0.2.0-220111183833"
          command:
            - /opt/strimzi-canary-tool/canary-dns-init.sh
          env:
            - name: "KAFKA_BOOTSTRAP_SERVERS"
              value: "test-mk-kafka-bootstrap:443"
            - name: "INIT_TIMEOUT_SECONDS"
              value: "600"
          resources:
            limits:
              memory: "64Mi"
              cpu: "75m"
            requests:
              memory: "64Mi"
              cpu: "75m"
      containers:
        - env:
            - name: "KAFKA_BOOTSTRAP_SERVERS"
              value: "test-mk-kafka-bootstrap:443"
            - name: "RECONCILE_INTERVAL_MS"
              value: "5000"
            - name: "EXPECTED_CLUSTER_SIZE"
              value: "3"
            - name: "KAFKA_VERSION"
              value: "2.6.0"
            - name: "TZ"
              value: "UTC"
            - name: "TLS_ENABLED"
              value: "true"
            - name: "TLS_CA_CERT"
              value: "/tmp/tls-ca-cert/ca.crt"
            - name: "SARAMA_LOG_ENABLED"
              valueFrom:
                configMapKeyRef:
                  key: "sarama.log.enabled"
                  name: "canary-config"
                  optional: true
            - name: "VERBOSITY_LOG_LEVEL"
              valueFrom:
                configMapKeyRef:
                  key: "verbosity.log.level"
                  name: "canary-config"
                  optional: true
            - name: "GODEBUG"
              valueFrom:
                configMapKeyRef:
                  key: "go.debug"
                  name: "canary-config"
                  optional: true
            - name: "TOPIC"
              value: "__redhat_strimzi_canary"
            - name: "TOPIC_CONFIG"
              value: "retention.ms=600000;segment.bytes=16384"
            - name: "CLIENT_ID"
              value: "__redhat_strimzi_canary_client"
            - name: "CONSUMER_GROUP_ID"
              value: "__redhat_strimzi_canary_group"
            - name: "PRODUCER_LATENCY_BUCKETS"
              value: "50,100,150,200,250,300,350,400,450,500"
            - name: "ENDTOEND_LATENCY_BUCKETS"
              value: "100,200,300,400,500,600,700,800,900,1000,1100,1200"
            - name: "CONNECTION_CHECK_LATENCY_BUCKETS"
              value: "100,200,300,400,500,600,700,800,900,1000,1100,1200"
            - name: "DYNAMIC_CONFIG_FILE"
              value: "/opt/etc/canary-config.json"
            - name: "STATUS_TIME_WINDOW_MS"
              value: "300000"
          image: "quay.io/mk-ci-cd/strimzi-canary:0.2.0-220111183833"
          livenessProbe:
            httpGet:
              path: "/liveness"
              port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 5
          name: "canary"
          ports:
            - containerPort: 8080
              name: "metrics"
          readinessProbe:
            httpGet:
              path: "/readiness"
              port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 5
          resources:
            limits:
              memory: "64Mi"
              cpu: "75m"
            requests:
              memory: "64Mi"
              cpu: "75m"
          volumeMounts:
            - mountPath: "/tmp/tls-ca-cert"
              name: "test-mk-tls-ca-cert"
            - mountPath: "/opt/etc"
              name: "config-volume"
      tolerations:
        - effect: "NoExecute"
          key: "bf2.org/kafkaInstanceProfileType"
          value: "standard"
        - effect: "NoSchedule"
          key: "bf2.org/kafkaInstanceProfileType"
          value: "standard"
      volumes:
        - name: "test-mk-tls-ca-cert"
          secret:
            secretName: "test-mk-cluster-ca-cert"
        - name: "config-volume"
          configMap:
            name: "canary-config"
            optional: true
